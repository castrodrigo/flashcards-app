// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Render HomeScreen should render successfully 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HomeScreen
    cards={
      Object {
        "321": Object {
          "123": Object {
            "answer": "Answer",
            "name": "Question",
          },
        },
      }
    }
    decks={
      Object {
        "321": Object {
          "id": "321",
          "name": "Deck Test",
        },
      }
    }
    decksMap={
      Array [
        "321",
      ]
    }
    navigation={
      Object {
        "navigate": [MockFunction],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <DeckListItem
          cardsCount={1}
          deck={
            Object {
              "id": "321",
              "name": "Deck Test",
            }
          }
          navigation={
            Object {
              "navigate": [MockFunction],
            }
          }
        />,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "321",
        "nodeType": "function",
        "props": Object {
          "cardsCount": 1,
          "deck": Object {
            "id": "321",
            "name": "Deck Test",
          },
          "navigation": Object {
            "navigate": [MockFunction],
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": [MockFunction],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <DeckListItem
            cardsCount={1}
            deck={
              Object {
                "id": "321",
                "name": "Deck Test",
              }
            }
            navigation={
              Object {
                "navigate": [MockFunction],
              }
            }
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "321",
          "nodeType": "function",
          "props": Object {
            "cardsCount": 1,
            "deck": Object {
              "id": "321",
              "name": "Deck Test",
            },
            "navigation": Object {
              "navigate": [MockFunction],
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [MockFunction],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": false,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
